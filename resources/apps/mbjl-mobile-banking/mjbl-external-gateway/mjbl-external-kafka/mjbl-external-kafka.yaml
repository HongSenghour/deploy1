---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mjbl-external-kafka
  namespace: mjbl-api-gateway
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: mjbl-external-kafka
  name: mjbl-external-kafka-headless
  namespace: mjbl-api-gateway
spec:
  clusterIP: None
  clusterIPs:
  - None
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: tcp-kafka-int
    port: 9092
    protocol: TCP
    targetPort: tcp-kafka-int
  - name: tcp-kafka-ctrl
    port: 29093
    protocol: TCP
    targetPort: tcp-kafka-ctrl
  selector:
    app: mjbl-external-kafka
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: mjbl-external-kafka
  name: mjbl-external-kafka
  namespace: mjbl-api-gateway
spec:
  podManagementPolicy: Parallel
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: mjbl-external-kafka
  servicename: mjbl-external-kafka-headless
  template:
    metadata:
      labels:
        app: mjbl-external-kafka
    spec:
      serviceAccountname: mjbl-external-kafka
      containers:
      - command:
        - sh
        - -exc
        - |
          export CLUSTER_ID="6PMpHYL9QkeyXRj9Nrp4KA" && \
          export KAFKA_NODE_ID=${HOSTNAME##*-} 
          export KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://${POD_NAME}.mjbl-external-kafka-headless.mjbl-api-gateway.svc.cluster.local:9092
          export KAFKA_CONTROLLER_QUORUM_VOTERS="0@.mjbl-api-gateway-0.mjbl-external-kafka-headless.mjbl-api-gateway.svc.cluster.local:29093,1@kafka-1.kafka-headless.kafka.svc.cluster.local:29093,2@kafka-2.kafka-headless.kafka.svc.cluster.local:29093" 

          exec /etc/confluent/docker/run
        env:
        - name: KAFKA_CONTROLLER_LISTENER_NAMES
          value: "CONTROLLER"
        - name: KAFKA_LISTENERS
          value: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:29093
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        name: mjbl-external-kafka
        image: 10.92.0.87:1521/uat/apache/kafka:3.8.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9092
          name: tcp-kafka-int
          protocol: TCP
        - containerPort: 29093
          name: tcp-kafka-ctrl
          protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: 1400Mi
          requests:
            cpu: 250m
            memory: 512Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          # readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsUser: 1000
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/kafka
          name: config
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1000
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: config
  updateStrategy:
    type: RollingUpdate

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   namespace: mjbl-api-gateway
#   name: mjbl-external-kafka
# spec:
#   replicas: 1
#   minReadySeconds: 30
#   strategy:
#     type: RollingUpdate
#     rollingUpdate:
#       maxUnavailable: 25%
#       maxSurge: 25%
#   selector:
#     matchLabels:
#       app: mjbl-external-kafka
#   template:
#     metadata:
#       labels:
#         app: mjbl-external-kafka
#     spec:
#       containers:
#       - name: mjbl-external-kafka
#         image: 10.92.0.87:1521/uat/apache/kafka:3.8.0
#         ports:
#         - containerPort: 9092
#         - containerPort: 9093
#           name: app-port
#         volumeMounts:
#         - name: mjbl-external-kafka-data
#           mountPath: /var/lib/mjbl-internal-kafka/data
#         - name: mjbl-external-kafka-metadata
#           mountPath: /var/lib/mjbl-internal-kafka/metadata
#         env:
#         - name: mjbl-external-kafka_ENABLE_KRAFT
#           value: "true"
#         - name: mjbl-external-kafka_CFG_NODE_ID
#           value: "0"
#         - name: mjbl-external-kafka_CFG_AUTO_CREATE_TOPICS_ENABLE
#           value: "true"
#         - name: mjbl-external-kafka_CFG_PROCESS_ROLES
#           value: "controller,broker"
#         - name: mjbl-external-kafka_CFG_CONTROLLER_QUORUM_VOTERS
#           value: "0@kafka:9093"
#         - name: mjbl-external-kafka_CFG_LISTENERS
#           value: "PLAINTEXT://:9092,CONTROLLER://:9093"
#         - name: mjbl-external-kafka_CFG_ADVERTISED_LISTENERS
#           value: "PLAINTEXT://:9092"
#         - name: mjbl-external-kafka_CFG_LISTENER_SECURITY_PROTOCOL_MAP
#           value: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
#         - name: mjbl-external-kafka_CFG_CONTROLLER_LISTENER_NAMES
#           value: "CONTROLLER"
#         - name: mjbl-external-kafka_CFG_INTER_BROKER_LISTENER_NAME
#           value: "PLAINTEXT"
#         resources:
#           requests:
#             memory: "2Gi"
#             cpu: "1"
#           limits:
#             memory: "4Gi"
#             cpu: "2"
#         securityContext:
#             allowPrivilegeEscalation: false
#       volumes:
#       - name: mjbl-external-kafka-data
#         emptyDir: {}
#       - name: mjbl-external-kafka-metadata
#         emptyDir: {}
#       affinity:
#         podAntiAffinity:
#           preferredDuringSchedulingIgnoredDuringExecution:
#             - podAffinityTerm:
#                 labelSelector:
#                   matchExpressions:
#                     - key: app
#                       operator: In
#                       values:
#                         - mjbl-external-kafka
#                 topologyKey: "kubernetes.io/hostname"
#               weight: 1

# ---

# kind: Service
# apiVersion: v1
# metadata:
#   namespace: mjbl-api-gateway
#   name: mjbl-external-kafka
# spec:
#   type: NodePort
#   selector:
#     app: mjbl-external-kafka
#   ports:
#     - protocol: TCP
#       port: 9092
#       targetPort: app-port
#       nodePort: 32099

# ---

# kind: Service
# apiVersion: v1
# metadata:
#   namespace: mjbl-api-gateway
#   name: mjbl-external-kafka-local
# spec:
#   type: ClusterIP
#   selector:
#     app: mjbl-external-kafka
#   ports:
#     - port: 9026
#       targetPort: app-port